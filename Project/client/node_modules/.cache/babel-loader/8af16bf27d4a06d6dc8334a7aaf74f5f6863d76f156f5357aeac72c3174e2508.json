{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IST\\\\Desktop\\\\Spring 2025\\\\SE\\\\Project\\\\SE_Project_42\\\\Project\\\\client\\\\src\\\\components\\\\StudentCourseView.js\",\n  _s = $RefreshSig$();\n// src/components/StudentCourseView.js\nimport React, { useEffect, useState } from 'react';\nimport { getCourses } from '../api/courseApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentCourseView = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [error, setError] = useState('');\n\n  // Fetch courses when the component mounts\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await getCourses(); // This calls the function from the API file\n        setCourses(response.data); // Save the courses data to the state\n      } catch (err) {\n        setError('Error fetching courses: ' + err.message);\n      }\n    };\n    fetchCourses();\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Courses for Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: course.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, course._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No courses available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentCourseView, \"h5HbSi7Kq9D8C15iwLCf827XyQk=\");\n_c = StudentCourseView;\nexport default StudentCourseView;\nvar _c;\n$RefreshReg$(_c, \"StudentCourseView\");","map":{"version":3,"names":["React","useEffect","useState","getCourses","jsxDEV","_jsxDEV","StudentCourseView","_s","courses","setCourses","error","setError","fetchCourses","response","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","course","name","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/IST/Desktop/Spring 2025/SE/Project/SE_Project_42/Project/client/src/components/StudentCourseView.js"],"sourcesContent":["// src/components/StudentCourseView.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getCourses } from '../api/courseApi'; \r\n\r\nconst StudentCourseView = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch courses when the component mounts\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const response = await getCourses(); // This calls the function from the API file\r\n        setCourses(response.data); // Save the courses data to the state\r\n      } catch (err) {\r\n        setError('Error fetching courses: ' + err.message);\r\n      }\r\n    };\r\n\r\n    fetchCourses();\r\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\r\n\r\n  return (\r\n    <div>\r\n      <h2>Courses for Student</h2>\r\n      \r\n      {/* Show error message if something went wrong */}\r\n      {error && <p>{error}</p>}\r\n\r\n      {/* Render courses */}\r\n      <ul>\r\n        {courses.length > 0 ? (\r\n          courses.map(course => (\r\n            <li key={course._id}>\r\n              <h3>{course.name}</h3>\r\n              <p>{course.description}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No courses available.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentCourseView;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,UAAU,CAAC,CAAC,CAAC,CAAC;QACrCM,UAAU,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZJ,QAAQ,CAAC,0BAA0B,GAAGI,GAAG,CAACC,OAAO,CAAC;MACpD;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG3BX,KAAK,iBAAIL,OAAA;MAAAY,QAAA,EAAIP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxBhB,OAAA;MAAAY,QAAA,EACGT,OAAO,CAACc,MAAM,GAAG,CAAC,GACjBd,OAAO,CAACe,GAAG,CAACC,MAAM,iBAChBnB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,EAAKO,MAAM,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBhB,OAAA;UAAAY,QAAA,EAAIO,MAAM,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFpBG,MAAM,CAACG,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL,CAAC,gBAEFhB,OAAA;QAAAY,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAxCID,iBAAiB;AAAAsB,EAAA,GAAjBtB,iBAAiB;AA0CvB,eAAeA,iBAAiB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}