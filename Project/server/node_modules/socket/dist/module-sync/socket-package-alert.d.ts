/// <reference types="node" />
import { ALERT_SEVERITY } from './shadow-npm-inject.js'
import {
  CompactSocketArtifact,
  CompactSocketArtifactAlert
} from './artifact.js'
import { Spinner } from '@socketsecurity/registry/lib/spinner'
declare enum ALERT_SEVERITY_COLOR {
  critical = 'magenta',
  high = 'red',
  middle = 'yellow',
  low = 'white'
}
declare enum ALERT_SEVERITY_ORDER {
  critical = 0,
  high = 1,
  middle = 2,
  low = 3,
  none = 4
}
type SocketPackageAlert = {
  name: string
  version: string
  key: string
  type: string
  blocked: boolean
  critical: boolean
  fixable: boolean
  raw: CompactSocketArtifactAlert
  upgradable: boolean
}
type AlertsByPkgId = Map<string, SocketPackageAlert[]>
type RiskCounts = {
  critical: number
  high: number
  middle: number
  low: number
}
type AlertIncludeFilter = {
  blocked?: boolean | undefined
  critical?: boolean | undefined
  cve?: boolean | undefined
  existing?: boolean | undefined
  unfixable?: boolean | undefined
  upgradable?: boolean | undefined
}
type AddSocketArtifactAlertToAlertsMapOptions = {
  consolidate?: boolean | undefined
  include?: AlertIncludeFilter | undefined
  overrides?:
    | {
        [key: string]: string
      }
    | undefined
  spinner?: Spinner | undefined
}
declare function addArtifactToAlertsMap<T extends AlertsByPkgId>(
  artifact: CompactSocketArtifact,
  alertsByPkgId: T,
  options?: AddSocketArtifactAlertToAlertsMapOptions | undefined
): Promise<T>
type CveExcludeFilter = {
  upgradable?: boolean | undefined
}
type CveInfoByPkgId = Map<
  string,
  Array<{
    firstPatchedVersionIdentifier: string
    vulnerableVersionRange: string
  }>
>
type GetCveInfoByPackageOptions = {
  exclude?: CveExcludeFilter | undefined
}
declare function getCveInfoByAlertsMap(
  alertsMap: AlertsByPkgId,
  options?: GetCveInfoByPackageOptions | undefined
): CveInfoByPkgId | null
type LogAlertsMapOptions = {
  hideAt?: `${ALERT_SEVERITY}` | 'none' | undefined
  output?: NodeJS.WriteStream | undefined
}
declare function logAlertsMap(
  alertsMap: AlertsByPkgId,
  options: LogAlertsMapOptions
): void
export {
  ALERT_SEVERITY_COLOR,
  ALERT_SEVERITY_ORDER,
  SocketPackageAlert,
  AlertsByPkgId,
  RiskCounts,
  AlertIncludeFilter,
  AddSocketArtifactAlertToAlertsMapOptions,
  addArtifactToAlertsMap,
  CveExcludeFilter,
  CveInfoByPkgId,
  GetCveInfoByPackageOptions,
  getCveInfoByAlertsMap,
  LogAlertsMapOptions,
  logAlertsMap
}
