/// <reference types="node" />
import registryConstants from '@socketsecurity/registry/lib/constants'
import { Agent } from './package-environment.js'
import { Remap } from '@socketsecurity/registry/lib/objects'
type RegistryEnv = typeof registryConstants.ENV
type RegistryInternals = (typeof registryConstants)['Symbol(kInternalsSymbol)']
type Sentry = any
type Internals = Remap<
  Omit<RegistryInternals, 'getIpc'> &
    Readonly<{
      getIpc: {
        (): Promise<IPC>
        <K extends keyof IPC | undefined>(
          key?: K | undefined
        ): Promise<K extends keyof IPC ? IPC[K] : IPC>
      }
      getSentry: () => Sentry
      setSentry(Sentry: Sentry): boolean
    }>
>
type ENV = Remap<
  RegistryEnv &
    Readonly<{
      LOCALAPPDATA: string
      SOCKET_CLI_ACCEPT_RISKS: boolean
      SOCKET_CLI_DEBUG: boolean
      SOCKET_CLI_NO_API_TOKEN: boolean
      SOCKET_CLI_VIEW_ALL_RISKS: boolean
      SOCKET_SECURITY_API_BASE_URL: string
      SOCKET_SECURITY_API_PROXY: string
      SOCKET_SECURITY_API_TOKEN: string
      XDG_DATA_HOME: string
    }>
>
type IPC = Readonly<{
  SOCKET_CLI_FIX?: string | undefined
  SOCKET_CLI_OPTIMIZE?: boolean | undefined
  SOCKET_CLI_SAFE_BIN?: string | undefined
  SOCKET_CLI_SAFE_PROGRESS?: boolean | undefined
}>
declare const constants: {
  readonly [kInternalsSymbol]: registryConstants.Internals
  readonly AT_LATEST: '@latest'
  readonly BIOME_JSON: 'biome.json'
  readonly CI: 'CI'
  readonly COLUMN_LIMIT: 80
  readonly EMPTY_FILE: '/* empty */\n'
  readonly ESLINT_CONFIG_JS: 'eslint.config.js'
  readonly ESNEXT: 'esnext'
  readonly EXT_CMD: '.cmd'
  readonly EXT_PS1: '.ps1'
  readonly EXTENSIONS: 'extensions'
  readonly EXTENSIONS_JSON: 'extensions.json'
  readonly GITIGNORE: '.gitignore'
  readonly HIDDEN_PACKAGE_LOCK_JSON: '.package-lock.json'
  readonly LATEST: 'latest'
  readonly LICENSE: 'LICENSE'
  readonly LICENSE_GLOB: 'LICEN[CS]E{[.-]*,}'
  readonly LICENSE_GLOB_RECURSIVE: '**/LICEN[CS]E{[.-]*,}'
  readonly LICENSE_ORIGINAL: 'LICENSE.original'
  readonly LICENSE_ORIGINAL_GLOB: '*.original{.*,}'
  readonly LICENSE_ORIGINAL_GLOB_RECURSIVE: '**/*.original{.*,}'
  readonly LOOP_SENTINEL: 1000000
  readonly MANIFEST_JSON: 'manifest.json'
  readonly MIT: 'MIT'
  readonly NODE_AUTH_TOKEN: 'NODE_AUTH_TOKEN'
  readonly NODE_ENV: 'NODE_ENV'
  readonly NODE_MODULES: 'node_modules'
  readonly NODE_MODULES_GLOB_RECURSIVE: '**/node_modules'
  readonly NODE_WORKSPACES: 'node_workspaces'
  readonly NODE_VERSION: string
  readonly NPM: 'npm'
  readonly NPX: 'npx'
  readonly OVERRIDES: 'overrides'
  readonly PACKAGE_DEFAULT_SOCKET_CATEGORIES: readonly ['cleanup']
  readonly PACKAGE_DEFAULT_NODE_RANGE: string
  readonly PACKAGE_DEFAULT_VERSION: '1.0.0'
  readonly PACKAGE_JSON: 'package.json'
  readonly PACKAGE_LOCK_JSON: 'package-lock.json'
  readonly PRE_COMMIT: 'PRE_COMMIT'
  readonly README_GLOB: 'README{.*,}'
  readonly README_GLOB_RECURSIVE: '**/README{.*,}'
  readonly README_MD: 'README.md'
  readonly REGISTRY: 'registry'
  readonly REGISTRY_SCOPE_DELIMITER: '__'
  readonly RESOLUTIONS: 'resolutions'
  readonly SOCKET_GITHUB_ORG: 'SocketDev'
  readonly SOCKET_IPC_HANDSHAKE: 'SOCKET_IPC_HANDSHAKE'
  readonly SOCKET_OVERRIDE_SCOPE: '@socketoverride'
  readonly SOCKET_PUBLIC_API_KEY: string
  readonly SOCKET_PUBLIC_API_TOKEN: string
  readonly SOCKET_REGISTRY_NPM_ORG: 'socketregistry'
  readonly SOCKET_REGISTRY_PACKAGE_NAME: '@socketsecurity/registry'
  readonly SOCKET_REGISTRY_REPO_NAME: 'socket-registry'
  readonly SOCKET_REGISTRY_SCOPE: '@socketregistry'
  readonly SOCKET_SECURITY_SCOPE: '@socketsecurity'
  readonly SUPPORTS_NODE_DISABLE_WARNING_FLAG: boolean
  readonly SUPPORTS_NODE_REQUIRE_MODULE: boolean
  readonly SUPPORTS_NODE_RUN: boolean
  readonly SUPPORTS_PROCESS_SEND: boolean
  readonly TAP: 'TAP'
  readonly TEMPLATE_CJS: 'CJS'
  readonly TEMPLATE_CJS_BROWSER: 'cjs-browser'
  readonly TEMPLATE_CJS_ESM: 'cjs-esm'
  readonly TEMPLATE_ES_SHIM_CONSTRUCTOR: 'es-shim-constructor'
  readonly TEMPLATE_ES_SHIM_PROTOTYPE_METHOD: 'es-shim-prototype-method'
  readonly TEMPLATE_ES_SHIM_STATIC_METHOD: 'es-shim-static-method'
  readonly TSCONFIG_JSON: 'tsconfig.json'
  readonly UNDEFINED_TOKEN: {}
  readonly UNLICENCED: 'UNLICENCED'
  readonly UNLICENSED: 'UNLICENSED'
  readonly UTF8: 'utf8'
  readonly VITEST: 'VITEST'
  readonly WIN32: boolean
  readonly abortController: AbortController
  readonly abortSignal: AbortSignal
  readonly copyLeftLicenses: ReadonlySet<string>
  readonly execPath: string
  readonly ignoreGlobs: readonly [
    '**/.git',
    '**/.npmrc',
    '**/bun.lockb?',
    '**/node_modules',
    '**/package-lock.json',
    '**/pnpm-lock.ya?ml',
    '**/yarn.lock',
    '**/.DS_Store',
    '**/.gitignore',
    '**/.hg',
    '**/.lock-wscript',
    '**/.npmignore',
    '**/.svn',
    '**/.wafpickle-*',
    '**/.*.swp',
    '**/._*/**',
    '**/archived-packages/**',
    '**/build/config.gypi',
    '**/CVS',
    '**/npm-debug.log',
    '**/*.orig',
    '**/.env',
    '**/.eslintcache',
    '**/.nvm',
    '**/.tap',
    '**/.tapci.yaml',
    '**/.vscode',
    '**/*.tsbuildinfo',
    '**/Thumbs.db'
  ]
  readonly kInternalsSymbol: unique symbol
  readonly lifecycleScriptNames: ReadonlySet<string>
  readonly maintainedNodeVersions: Readonly<MaintainedNodeVersions>
  readonly nodeHardenFlags: readonly [
    '--disable-proto',
    'delete',
    '--frozen-intrinsics',
    '--no-deprecation'
  ] &
    string[]
  readonly nodeNoWarningsFlags: readonly [
    '--disable-warning',
    'ExperimentalWarning'
  ]
  readonly npmExecPath: string
  readonly packageExtensions: readonly [string, object][]
  readonly packumentCache: Map<unknown, unknown>
  readonly pacoteCachePath: string
  readonly parseArgsConfig: import(
    '@socketsecurity/registry/lib/constants/parse-args-config'
  )
  readonly skipTestsByEcosystem: Map<string, ReadonlySet<string>>
  readonly spinner: {
    [x: string]: YoctoSpinner
    [x: number]: YoctoSpinner
    [x: symbol]: YoctoSpinner
    error: (text?: string | undefined, ...extras: any[]) => any
    errorAndStop: (text?: string | undefined, ...extras: any[]) => any
    fail: (text?: string | undefined, ...extras: any[]) => any
    failAndStop: (text?: string | undefined, ...extras: any[]) => any
    getText: () => string
    info: (text?: string | undefined, ...extras: any[]) => any
    infoAndStop: (text?: string | undefined, ...extras: any[]) => any
    log: (text?: string | undefined, ...extras: any[]) => any
    logAndStop: (text?: string | undefined, ...extras: any[]) => any
    setText: (text?: string | undefined) => any
    start: (text?: string | undefined, ...extras: any[]) => any
    stop: (finalText?: string | undefined, ...extras: any[]) => any
    success: (text?: string | undefined, ...extras: any[]) => any
    successAndStop: (text?: string | undefined, ...extras: any[]) => any
    warn: (text?: string | undefined, ...extras: any[]) => any
    warnAndStop: (text?: string | undefined, ...extras: any[]) => any
    warning: (text?: string | undefined, ...extras: any[]) => any
    warningAndStop: (text?: string | undefined, ...extras: any[]) => any
  }
  readonly tsLibsAvailable: ReadonlySet<string>
  readonly tsTypesAvailable: ReadonlySet<string>
  readonly win32EnsureTestsByEcosystem: Map<string, ReadonlySet<string>>
  readonly 'Symbol(kInternalsSymbol)': Internals
  readonly ALERT_TYPE_CRITICAL_CVE: 'criticalCVE'
  readonly ALERT_TYPE_CVE: 'cve'
  readonly ALERT_TYPE_MEDIUM_CVE: 'mediumCVE'
  readonly ALERT_TYPE_MILD_CVE: 'mildCVE'
  readonly API_V0_URL: 'https://api.socket.dev/v0/'
  readonly BINARY_LOCK_EXT: '.lockb'
  readonly BUN: 'bun'
  readonly CLI: 'cli'
  readonly CVE_ALERT_PROPS_FIRST_PATCHED_VERSION_IDENTIFIER: 'firstPatchedVersionIdentifier'
  readonly ENV: ENV
  readonly DIST_TYPE: 'module-sync' | 'require'
  readonly DRY_RUN_LABEL: '[DryRun]'
  readonly DRY_RUN_BAIL_TEXT: '[DryRun] Bailing now'
  readonly INLINED_SOCKET_CLI_LEGACY_BUILD: 'INLINED_SOCKET_CLI_LEGACY_BUILD'
  readonly INLINED_SOCKET_CLI_PUBLISHED_BUILD: 'INLINED_SOCKET_CLI_PUBLISHED_BUILD'
  readonly INLINED_SOCKET_CLI_SENTRY_BUILD: 'INLINED_SOCKET_CLI_SENTRY_BUILD'
  readonly IPC: IPC
  readonly LOCALAPPDATA: 'LOCALAPPDATA'
  readonly LOCK_EXT: '.lock'
  readonly MODULE_SYNC: 'module-sync'
  readonly NPM_BUGGY_OVERRIDES_PATCHED_VERSION: '11.2.0'
  readonly NPM_REGISTRY_URL: 'https://registry.npmjs.org'
  readonly PNPM: 'pnpm'
  readonly REDACTED: '<redacted>'
  readonly REQUIRE: 'require'
  readonly SHADOW_NPM_BIN: 'shadow-bin'
  readonly SHADOW_NPM_INJECT: 'shadow-npm-inject'
  readonly SHADOW_NPM_PATHS: 'shadow-npm-paths'
  readonly SOCKET: 'socket'
  readonly SOCKET_APP_DIR: 'socket/settings'
  readonly SOCKET_CLI_ACCEPT_RISKS: 'SOCKET_CLI_ACCEPT_RISKS'
  readonly SOCKET_CLI_BIN_NAME: 'socket'
  readonly SOCKET_CLI_BIN_NAME_ALIAS: 'cli'
  readonly SOCKET_CLI_DEBUG: 'SOCKET_CLI_DEBUG'
  readonly SOCKET_CLI_FIX: 'SOCKET_CLI_FIX'
  readonly SOCKET_CLI_ISSUES_URL: 'https://github.com/SocketDev/socket-cli/issues'
  readonly SOCKET_CLI_SENTRY_BIN_NAME_ALIAS: 'cli-with-sentry'
  readonly SOCKET_CLI_LEGACY_PACKAGE_NAME: '@socketsecurity/cli'
  readonly SOCKET_CLI_NO_API_TOKEN: 'SOCKET_CLI_NO_API_TOKEN'
  readonly SOCKET_CLI_NPM_BIN_NAME: 'socket-npm'
  readonly SOCKET_CLI_NPX_BIN_NAME: 'socket-npx'
  readonly SOCKET_CLI_OPTIMIZE: 'SOCKET_CLI_OPTIMIZE'
  readonly SOCKET_CLI_PACKAGE_NAME: 'socket'
  readonly SOCKET_CLI_SAFE_BIN: 'SOCKET_CLI_SAFE_BIN'
  readonly SOCKET_CLI_SAFE_PROGRESS: 'SOCKET_CLI_SAFE_PROGRESS'
  readonly SOCKET_CLI_SENTRY_BIN_NAME: 'socket-with-sentry'
  readonly SOCKET_CLI_SENTRY_NPM_BIN_NAME: 'socket-npm-with-sentry'
  readonly SOCKET_CLI_SENTRY_NPX_BIN_NAME: 'socket-npx-with-sentry'
  readonly SOCKET_CLI_SENTRY_PACKAGE_NAME: '@socketsecurity/cli-with-sentry'
  readonly SOCKET_CLI_VIEW_ALL_RISKS: 'SOCKET_CLI_VIEW_ALL_RISKS'
  readonly SOCKET_SECURITY_API_BASE_URL: 'SOCKET_SECURITY_API_BASE_URL'
  readonly SOCKET_SECURITY_API_PROXY: 'SOCKET_SECURITY_API_PROXY'
  readonly SOCKET_SECURITY_API_TOKEN: 'SOCKET_SECURITY_API_TOKEN'
  readonly VLT: 'vlt'
  readonly WITH_SENTRY: 'with-sentry'
  readonly XDG_DATA_HOME: 'XDG_DATA_HOME'
  readonly YARN: 'yarn'
  readonly YARN_BERRY: 'yarn/berry'
  readonly YARN_CLASSIC: 'yarn/classic'
  readonly YARN_LOCK: 'yarn.lock'
  readonly bashRcPath: string
  readonly distCliPath: string
  readonly distInstrumentWithSentryPath: string
  readonly distPath: string
  readonly distShadowNpmBinPath: string
  readonly distShadowNpmInjectPath: string
  readonly homePath: string
  readonly minimumVersionByAgent: Map<Agent, string>
  readonly nmBinPath: string
  readonly rootBinPath: string
  readonly rootDistPath: string
  readonly rootPath: string
  readonly shadowBinPath: string
  readonly zshRcPath: string
}
export { constants as default }
