"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sortDirectKeys = sortDirectKeys;
exports.sortDeepKeys = sortDeepKeys;
exports.sortKeysByPriority = sortKeysByPriority;
const util_lex_comparator_1 = require("@pnpm/util.lex-comparator");
const sort_keys_1 = __importDefault(require("sort-keys"));
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function sortDirectKeys(obj) {
    return (0, sort_keys_1.default)(obj, {
        compare: util_lex_comparator_1.lexCompare,
        deep: false,
    });
}
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function sortDeepKeys(obj) {
    return (0, sort_keys_1.default)(obj, {
        compare: util_lex_comparator_1.lexCompare,
        deep: true,
    });
}
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function sortKeysByPriority(opts, obj) {
    const compare = compareWithPriority.bind(null, opts.priority);
    return (0, sort_keys_1.default)(obj, {
        compare,
        deep: opts.deep,
    });
}
function compareWithPriority(priority, left, right) {
    const leftPriority = priority[left];
    const rightPriority = priority[right];
    if (leftPriority != null && rightPriority != null)
        return leftPriority - rightPriority;
    if (leftPriority != null)
        return -1;
    if (rightPriority != null)
        return 1;
    return (0, util_lex_comparator_1.lexCompare)(left, right);
}
//# sourceMappingURL=index.js.map